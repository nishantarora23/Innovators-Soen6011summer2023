plugins {
	id 'com.adarshr.test-logger' version '3.2.0'
    id 'java'
    id 'war'
}

group 'com.innovators'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// Define a custom property to specify the desired Java versions
ext {
    javaVersion14 = JavaVersion.VERSION_14
    javaVersion11 = JavaVersion.VERSION_11
}

// Define a method to get the available Java version
def getAvailableJavaVersion() {
    if (JavaVersion.current() >= javaVersion14) {
        return javaVersion14
    } else if (JavaVersion.current() >= javaVersion11) {
        return javaVersion11
    } else {
        throw new GradleException("No compatible Java version found.")
    }
}

// Set sourceCompatibility and targetCompatibility dynamically based on the available Java version
sourceCompatibility = getAvailableJavaVersion()
targetCompatibility = getAvailableJavaVersion()

dependencies {
    implementation files('libs/mysql-connector-j-8.0.33.jar')
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.1'
    providedCompile group: 'org.springframework', name: 'spring-core', version: '5.2.5.RELEASE'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}